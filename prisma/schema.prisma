// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  // ユーザーが飼っている猫たち
  cats Cat[]
}

// 活動量の列挙型
enum Activity {
  LOW
  NORMAL
  HIGH
}

//猫のプロフィール
model Cat {
  id         String   @id @default(uuid())
  userId     String
  name       String
  weightKg   Float
  ageYears   Int
  activity   Activity @default(NORMAL)
  sex        String   @default("不明")
  hairAmount String   @default("普通")
  size       String   @default("中型")
  neutered   Boolean  @default(false)
  allergies  String?
  createdAt  DateTime @default(now())

  // 既存
  user User @relation(fields: [userId], references: [id])

  preferences IngredientPreference[]

  @@index([userId])
}

// 原材料
model Product {
  id               Int      @id @default(autoincrement())
  barcode          String   @unique // JAN/EAN
  name             String
  brand            String   @default("")
  ingredients_text String   @default("") // 原材料の生テキスト
  image            String   @default("") // 画像URL（任意）
  source           String   @default("local") // local / openfoodfacts / openpetfoodfacts
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

enum IngredientLevel {
  OK
  CAUTION
  NG
}

model IngredientPreference {
  id        String          @id @default(uuid())
  catId     String
  keyword   String
  level     IngredientLevel   // 
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt

  cat Cat @relation(fields: [catId], references: [id])

  @@unique([catId, keyword])  // ← ★ upsert で使う複合ユニークキー
}
